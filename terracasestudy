provider "aws" {
  region = "us-east-1" # Change this to your desired AWS region
}

# Create a VPC
resource "aws_vpc" "pratik_vpc" {
  cidr_block = "10.0.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true

  tags = {
    Name = "my-vpc"
  }
}

# Create two subnets in the VPC
resource "aws_subnet" "subnet1" {
  vpc_id                  = aws_vpc.pratik_vpc.id
  cidr_block              = "10.0.1.0/24"
  availability_zone       = "us-east-1a"
  map_public_ip_on_launch = true

  tags = {
    Name = "subnet-1"
  }
}

resource "aws_subnet" "subnet2" {
  vpc_id                  = aws_vpc.pratik_vpc.id
  cidr_block              = "10.0.2.0/24"
  availability_zone       = "us-east-1b"
  map_public_ip_on_launch = true

  tags = {
    Name = "subnet-2"
  }
}

# Create a security group allowing incoming traffic on port 80 (HTTP)
resource "aws_security_group" "web_sg" {
  name        = "web_sg"
  description = "Allow incoming HTTP traffic"
  vpc_id      = aws_vpc.pratik_vpc.id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Create an internet gateway and attach it to the VPC
resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.pratik_vpc.id

  tags = {
    Name = "my-igw"
  }
}

# Create a network interface for each subnet
resource "aws_network_interface" "web_instance_nic_subnet1" {
  subnet_id = aws_subnet.subnet1.id
  security_groups = [aws_security_group.web_sg.id]

  tags = {
    Name = "web-instance-nic-subnet-1"
  }
}

resource "aws_network_interface" "web_instance_nic_subnet2" {
  subnet_id = aws_subnet.subnet2.id
  security_groups = [aws_security_group.web_sg.id]

  tags = {
    Name = "web-instance-nic-subnet-2"
  }
}

# Create an Ubuntu EC2 instance in each subnet
resource "aws_instance" "web_instance_subnet1" {
  ami                    = "ami-06aa3f7caf3a30282" # Specify the Ubuntu AMI ID
  instance_type          = "t2.micro"
  subnet_id              = aws_subnet.subnet1.id
  network_interface_ids  = [aws_network_interface.web_instance_nic_subnet1.id]
  key_name               = "Jenkins.pem" # Replace with your key pair name
  associate_public_ip_address = true

  tags = {
    Name = "web-instance-subnet-1"
  }
}

resource "aws_instance" "web_instance_subnet2" {
  ami                    = "ami-06aa3f7caf3a30282" # Specify the Ubuntu AMI ID
  instance_type          = "t2.micro"
  subnet_id              = aws_subnet.subnet2.id
  network_interface_ids  = [aws_network_interface.web_instance_nic_subnet2.id]
  key_name               = "Jenkins.pem" # Replace with your key pair name
  associate_public_ip_address = true

  tags = {
    Name = "web-instance-subnet-2"
  }
}
